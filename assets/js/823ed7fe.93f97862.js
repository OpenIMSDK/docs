"use strict";(self.webpackChunkopenim_docs=self.webpackChunkopenim_docs||[]).push([[11936],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,k=d["".concat(p,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(k,l(l({ref:t},s),{},{components:n})):a.createElement(k,l({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},40349:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>b,frontMatter:()=>o,metadata:()=>u,toc:()=>d});n(67294);var a=n(3905);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const o={sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:2},p="initSDK",u={unversionedId:"api/initialization/initSDK",id:"api/initialization/initSDK",title:"initSDK",description:"Feature Introduction",source:"@site/i18n/en/docusaurus-plugin-content-docs-sdks/current/api/initialization/initSDK.mdx",sourceDirName:"api/initialization",slug:"/api/initialization/initSDK",permalink:"/sdks/api/initialization/initSDK",draft:!1,editUrl:"https://github.com/OpenIMSDK/docs/tree/main/docs/sdks/api/initialization/initSDK.mdx",tags:[],version:"current",lastUpdatedAt:1705283358,formattedLastUpdatedAt:"Jan 15, 2024",sidebarPosition:1,frontMatter:{sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:2},sidebar:"tutorialSidebar",previous:{title:"Initialization, Login",permalink:"/sdks/api/initialization/"},next:{title:"Login",permalink:"/sdks/api/initialization/login"}},s={},d=[{value:"Feature Introduction",id:"feature-introduction",level:2},{value:"Function Prototype",id:"function-prototype",level:3},{value:"Input Parameters",id:"input-parameters",level:3},{value:"Return Result",id:"return-result",level:3},{value:"Code Example",id:"code-example",level:3},{value:"Function Prototype",id:"function-prototype-1",level:3},{value:"Input Parameters",id:"input-parameters-1",level:3},{value:"Return Result",id:"return-result-1",level:3},{value:"Code Example",id:"code-example-1",level:3},{value:"Parameter Details",id:"parameter-details",level:3},{value:"Code Example",id:"code-example-2",level:3},{value:"Function Prototype",id:"function-prototype-2",level:3},{value:"Input Parameters",id:"input-parameters-2",level:3},{value:"Return Result",id:"return-result-2",level:3},{value:"Code Example",id:"code-example-3",level:3},{value:"Function Prototype",id:"function-prototype-3",level:3},{value:"Input Parameters",id:"input-parameters-3",level:3},{value:"Return Result",id:"return-result-3",level:3},{value:"Code Example",id:"code-example-4",level:3}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},m=c("Tabs"),k=c("TabItem"),g={toc:d},N="wrapper";function b(e){var{components:t}=e,n=l(e,["components"]);return(0,a.kt)(N,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){r(e,t,n[t])}))}return e}({},g,n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"initsdk"},"initSDK"),(0,a.kt)("h2",{id:"feature-introduction"},"Feature Introduction"),(0,a.kt)("admonition",{title:"Note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Initialization is the first step for the client to call the SDK. Within the lifespan of the application, it can only be called once. Repeated calls might lead to unforeseen problems.")),(0,a.kt)("admonition",{title:"Warning",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"(1) After successful initialization, set various listeners, with examples provided in the respective ",(0,a.kt)("a",{parentName:"p",href:"../../quickstart"},"Quick Integration")," sections for each platform;\n(2) The client's underlying logs will be stored in the specified directory, available for debugging.")),(0,a.kt)(m,{groupId:"sdks-language",values:[{label:"iOS",value:"iOS"},{label:"Android",value:"Android"},{label:"Flutter",value:"Flutter"},{label:"uni-app",value:"uni-app"},{label:"Browser/MiniProgram",value:"Web"},{label:"React-Native",value:"React-Native"}],mdxType:"Tabs"},(0,a.kt)(k,{value:"Flutter",mdxType:"TabItem"},(0,a.kt)("h3",{id:"function-prototype"},"Function Prototype"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart",metastring:"showLineNumbers",showLineNumbers:!0},"\n    // Method One\n   Future<dynamic> initSDK({\n      required int platform,\n      required String apiAddr,\n      required String wsAddr,\n      required String dataDir,\n      required OnConnectListener listener,\n      int logLevel = 6,\n      bool isLogStandardOutput = true,\n      String? logFilePath,\n      String? operationID,\n    });\n\n    // Method Two\n    Future<bool?> init(\n    InitConfig config,\n    OnConnectListener listener, {\n    String? operationID,\n  });\n")),(0,a.kt)("h3",{id:"input-parameters"},"Input Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/sdks/class/init/config"},"InitConfig")),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"Initialization parameters")))),(0,a.kt)("h3",{id:"return-result"},"Return Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"~"),(0,a.kt)("td",{parentName:"tr",align:null},"dynamic"),(0,a.kt)("td",{parentName:"tr",align:null},"Indicator of initialization success")))),(0,a.kt)("h3",{id:"code-example"},"Code Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart",metastring:"showLineNumbers",showLineNumbers:!0},"     OpenIM.iMManager.initSDK(\n          platform: IMPlatform.android,\n          apiAddr: '',\n          wsAddr: '',\n          dataDir: '',\n          listener: OnConnectListener(\n            onConnectFailed: (code, errorMsg) {},\n            onConnecting: () {},\n            onConnectSuccess: () {},\n            onKickedOffline: () {},\n            onUserTokenExpired: () {},\n          ),\n        );\n"))),(0,a.kt)(k,{value:"iOS",mdxType:"TabItem"},(0,a.kt)("h3",{id:"function-prototype-1"},"Function Prototype"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift",metastring:"showLineNumbers",showLineNumbers:!0},"- (BOOL)initSDKWithConfig:(OIMInitConfig *)config\n             onConnecting:(nullable OIMVoidCallback)onConnecting\n         onConnectFailure:(nullable OIMFailureCallback)onConnectFailure\n         onConnectSuccess:(nullable OIMVoidCallback)onConnectSuccess\n          onKickedOffline:(nullable OIMVoidCallback)onKickedOffline\n       onUserTokenExpired:(nullable OIMVoidCallback)onUserTokenExpired;\n")),(0,a.kt)("h3",{id:"input-parameters-1"},"Input Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/sdks/class/init/config"},"OIMInitConfig")),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"Initialization parameters")))),(0,a.kt)("h3",{id:"return-result-1"},"Return Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"success"),(0,a.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,a.kt)("td",{parentName:"tr",align:null},"Indicator of initialization success")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"onConnecting"),(0,a.kt)("td",{parentName:"tr",align:null},"OIMVoidCallback"),(0,a.kt)("td",{parentName:"tr",align:null},"Connecting callback")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"onConnectFailure"),(0,a.kt)("td",{parentName:"tr",align:null},"OIMFailureCallback"),(0,a.kt)("td",{parentName:"tr",align:null},"Connection failure callback")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"onConnectSuccess"),(0,a.kt)("td",{parentName:"tr",align:null},"OIMFailureCallback"),(0,a.kt)("td",{parentName:"tr",align:null},"Connection success callback")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"onKickedOffline"),(0,a.kt)("td",{parentName:"tr",align:null},"OIMVoidCallback"),(0,a.kt)("td",{parentName:"tr",align:null},"Kicked offline callback")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"onUserTokenExpired"),(0,a.kt)("td",{parentName:"tr",align:null},"OIMVoidCallback"),(0,a.kt)("td",{parentName:"tr",align:null},"Token expiration callback")))),(0,a.kt)("h3",{id:"code-example-1"},"Code Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift",metastring:"showLineNumbers",showLineNumbers:!0},'OIMInitConfig *config = [OIMInitConfig new];\nconfig.apiAddr = @"";\nconfig.wsAddr = @"";\nconfig.objectStorage = @"";\n\nBOOL success = [OIMManager.manager initSDKWithConfig:config\n                                        onConnecting:^{\n\n} onConnectFailure:^(NSInteger code, NSString * _Nullable msg) {\n    // Connection failure callback function\n    // code error code\n    // error error message\n} onConnectSuccess:^{\n    // SDK successfully connected to the IM server\n} onKickedOffline:^{\n    // SDK is connecting to the IM server\n} onUserTokenExpired:^{\n    // Online ticket has expired: At this point, you need to generate a new token and call the login() function again to log in.\n}];\n\n'))),(0,a.kt)(k,{value:"Android",mdxType:"TabItem"},(0,a.kt)("h3",{id:"parameter-details"},"Parameter Details"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},"public boolean initSDK(Application application, InitConfig initConfig, @NotNull OnConnListener listener)\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"application"),(0,a.kt)("td",{parentName:"tr",align:null},"Application"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"Application context")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"initConfig"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/sdks/class/init/config"},"InitConfig")),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"Initialization parameters")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"listener"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/sdks/listener/connectListener"},"OnConnectListener")),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"Listener")))),(0,a.kt)("h3",{id:"code-example-2"},"Code Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},"InitConfig initConfig = new InitConfig(\n            Constant.getImApiUrl(), //SDK API address\n            Constant.getImWsUrl(), //SDK WebSocket address\n            getStorageDir(), //SDK database storage directory\n            );\n     OpenIMClient.getInstance().initSDK(application,\n          initConfig,\n          new OnConnListener() {\n                 @Override\n                public void onConnectFailed(long code, String error) {\n                    //Connection to the server failed\n                }\n\n                @Override\n                public void onConnectSuccess() {\n                    //Successfully connected to the server\n                }\n\n                @Override\n                public void onConnecting() {\n                    //Connecting to the server...\n                }\n\n                @Override\n                public void onKickedOffline() {\n                    //The current user was kicked offline\n                }\n\n                @Override\n                public void onUserTokenExpired() {\n                    //Login token has expired\n                }\n            });\n"))),(0,a.kt)(k,{value:"Web",mdxType:"TabItem"},(0,a.kt)("admonition",{title:"Note",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The JS SDK doesn't require initialization, directly call login."))),(0,a.kt)(k,{value:"uni-app",mdxType:"TabItem"},(0,a.kt)("h3",{id:"function-prototype-2"},"Function Prototype"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"showLineNumbers",showLineNumbers:!0},'IMSDK.asyncApi("initSDK", operationID: string, config: InitConfig): Promise<boolean>\n')),(0,a.kt)("h3",{id:"input-parameters-2"},"Input Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"operationID"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"Operation ID, used for issue tracking, ensure uniqueness. Recommended to use current time and random number")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/sdks/class/init/config"},"InitConfig")),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"Initialization parameters")))),(0,a.kt)("h3",{id:"return-result-2"},"Return Result"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Using the ",(0,a.kt)("inlineCode",{parentName:"p"},"openim-uniapp-polyfill")," package, the function is promised, so use ",(0,a.kt)("inlineCode",{parentName:"p"},"then")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"catch")," to determine and handle success or failure callbacks.")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Promise.then()"),(0,a.kt)("td",{parentName:"tr",align:null},"Promise<boolean",">"),(0,a.kt)("td",{parentName:"tr",align:null},"Whether initialization was successful")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Promise.catch()"),(0,a.kt)("td",{parentName:"tr",align:null},"Promise<",(0,a.kt)("a",{parentName:"td",href:"/sdks/class/response"},"CatchResponse"),">"),(0,a.kt)("td",{parentName:"tr",align:null},"Call failure callback")))),(0,a.kt)("h3",{id:"code-example-3"},"Code Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},"// App.vue\nimport IMSDK from 'openim-uniapp-polyfill';\n\nconst path = await getDbDir();\nconst config = {\n  apiAddr: 'http://xxx:10002', // IM API interface address. For example: http://xxx:10002\n  wsAddr: 'ws://xxx:10001', // IM websocket address. For example: ws://xxx:10001\n  platformID: uni.$u.os() === 'ios' ? 1 : 2, // Platform, refer to Platform class,\n  dataDir: path, // Data storage path\n  logLevel: 6, // Logging level\n  logFilePath: path, // Directory where logs are stored\n  isLogStandardOutput: true, // Whether to output to console\n};\nconst flag = await IMSDK.asyncApi('initSDK', IMSDK.uuid(), config);\n\n// utils.js\nexport const getDbDir = () =>\n  new Promise((resolve, reject) => {\n    plus.io.requestFileSystem(plus.io.PRIVATE_DOC, (fs) => {\n      fs.root.getDirectory(\n        'user',\n        {\n          create: true,\n        },\n        (entry) => {\n          resolve(entry.fullPath);\n        },\n        (error) => {\n          reject(error);\n        }\n      );\n    });\n  });\n"))),(0,a.kt)(k,{value:"React-Native",mdxType:"TabItem"},(0,a.kt)("h3",{id:"function-prototype-3"},"Function Prototype"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},"    OpenIMSDKRN.initSDK(config: InitConfig,optionalID:string)\n")),(0,a.kt)("h3",{id:"input-parameters-3"},"Input Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/sdks/class/init/config"},"InitConfig")),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"Initialization parameters")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"operationID"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"Operation ID, used for problem location, keep unique, suggest using current time and random number")))),(0,a.kt)("h3",{id:"return-result-3"},"Return Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Promise.then()"),(0,a.kt)("td",{parentName:"tr",align:null},"Promise<boolean",">"),(0,a.kt)("td",{parentName:"tr",align:null},"Whether initialization was successful")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Promise.catch()"),(0,a.kt)("td",{parentName:"tr",align:null},"Promise<",(0,a.kt)("a",{parentName:"td",href:"/sdks/class/response"},"CatchResponse"),">"),(0,a.kt)("td",{parentName:"tr",align:null},"Callback on failed call")))),(0,a.kt)("h3",{id:"code-example-4"},"Code Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"showLineNumbers",showLineNumbers:!0},"    import OpenIMSDKRN, { OpenIMEmitter } from 'open-im-sdk-rn';\n\n    const Init = async () => {\n      await RNFS.mkdir(RNFS.DocumentDirectoryPath + '/tmp');\n          const config = {\n            platformID: platform,\n            apiAddr: 'https://xxx/api', // IM\u7684API\u63a5\u53e3\u5730\u5740\u3002\u5982\uff1ahttp://xxx:10002\n            wsAddr: 'wss://xxx/msg_gateway', // IM\u7684websocket\u5730\u5740\u3002\u5982\uff1a ws://xxx:10001\n            dataDir: RNFS.DocumentDirectoryPath + '/tmp', // \u6570\u636e\u5b58\u50a8\u8def\u5f84\n            logLevel: 6,  // \u65e5\u5fd7\u6253\u5370\u7ea7\u522b\n            isLogStandardOutput: true, // YesNo\u8f93\u51fa\u5230\u63a7\u5236\u53f0\n          };\n          try {\n            const result = await OpenIMSDKRN.initSDK(config, \"operationID\");\n    \n          } catch (error) {\n            console.error('Error initializing SDK:', error); // Log the error\n          }\n        };\n\n")))))}b.isMDXComponent=!0}}]);