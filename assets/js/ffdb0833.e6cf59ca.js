"use strict";(self.webpackChunkopenim_docs=self.webpackChunkopenim_docs||[]).push([[52999],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,k=c["".concat(l,".").concat(d)]||c[d]||u[d]||i;return n?a.createElement(k,s(s({ref:t},m),{},{components:n})):a.createElement(k,s({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[c]="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},18448:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>k,frontMatter:()=>o,metadata:()=>p,toc:()=>c});n(67294);var a=n(3905);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const o={},l="Use Linux system for production deployment",p={unversionedId:"gettingStarted/install-openim-linux-system",id:"gettingStarted/install-openim-linux-system",title:"Use Linux system for production deployment",description:"0. Introduction",source:"@site/i18n/en/docusaurus-plugin-content-docs-guides/current/gettingStarted/install-openim-linux-system.mdx",sourceDirName:"gettingStarted",slug:"/gettingStarted/install-openim-linux-system",permalink:"/guides/gettingStarted/install-openim-linux-system",draft:!1,editUrl:"https://github.com/OpenIMSDK/docs/tree/main/docs/guides/gettingStarted/install-openim-linux-system.mdx",tags:[],version:"current",lastUpdatedAt:1705827781,formattedLastUpdatedAt:"Jan 21, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Environment and Components",permalink:"/guides/gettingStarted/env-comp"},next:{title:"OIMWS SDK Server User Guide",permalink:"/guides/gettingStarted/jssdk"}},m={},c=[{value:"0. <a name='Introduction'></a>Introduction",id:"0-introduction",level:2},{value:"1. <a name='Deployment'></a>Deployment",id:"1-deployment",level:2},{value:"Continued Maintenance:",id:"continued-maintenance",level:3},{value:"Important <code>systemctl</code> and Logging Commands to Learn:",id:"important-systemctl-and-logging-commands-to-learn",level:3},{value:"2. <a name='PrerequisitesRequiresrootpermissions'></a>Prerequisites (Requires root permissions)",id:"2-prerequisites-requires-root-permissions",level:2},{value:"3. <a name='Createopenim-apisystemdunittemplatefile'></a> Create <code>openim-api</code> systemd unit template file",id:"3--create-openim-api-systemd-unit-template-file",level:2},{value:"4. <a name='CopysystemdunittemplatefiletosystemdconfigdirectoryRequiresrootpermissions'></a>Copy systemd unit template file to systemd config directory (Requires root permissions)",id:"4-copy-systemd-unit-template-file-to-systemd-config-directory-requires-root-permissions",level:2},{value:"5. <a name='Startsystemdservice'></a>Start systemd service",id:"5-start-systemd-service",level:2}],u={toc:c},d="wrapper";function k(e){var{components:t}=e,n=s(e,["components"]);return(0,a.kt)(d,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){r(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"use-linux-system-for-production-deployment"},"Use Linux system for production deployment"),(0,a.kt)("h2",{id:"0-introduction"},"0. ",(0,a.kt)("a",{name:"Introduction"}),"Introduction"),(0,a.kt)("p",null,"Systemd is the default service management form for the latest Linux distributions, replacing the original init."),(0,a.kt)("p",null,"The OpenIM system is a comprehensive suite of services tailored to address a wide variety of messaging needs. This guide will walk you through the steps of setting up the OpenIM system services and provide insights into its usage."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Prerequisites:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A Linux server with necessary privileges."),(0,a.kt)("li",{parentName:"ul"},"Ensure you have ",(0,a.kt)("inlineCode",{parentName:"li"},"systemctl")," installed and running.")),(0,a.kt)("h2",{id:"1-deployment"},"1. ",(0,a.kt)("a",{name:"Deployment"}),"Deployment"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Retrieve the Installation Script"),":"),(0,a.kt)("p",{parentName:"li"},"Clone OpenIM in localhost:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/openimsdk/open-im-server && cd open-im-server\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Install OpenIM"),":"),(0,a.kt)("p",{parentName:"li"},"To install all the components of OpenIM, run:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/install/install.sh -i  \n")),(0,a.kt)("p",{parentName:"li"},"or"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/install/install.sh --install\n")),(0,a.kt)("p",{parentName:"li"},"This will initiate the installation process for all OpenIM components.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Check the Status"),":"),(0,a.kt)("p",{parentName:"li"},"Post installation, it is good practice to verify if all the services are running as expected:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl status openim.target\n")),(0,a.kt)("p",{parentName:"li"},"This will list the status of all related services of OpenIM."))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Maintenance & Management:")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Checking Individual Service Status"),":"),(0,a.kt)("p",{parentName:"li"},"You can monitor the status of individual services with the following command:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl status <service-name>\n")),(0,a.kt)("p",{parentName:"li"},"For instance:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl status openim-api.service\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Starting and Stopping Services"),":"),(0,a.kt)("p",{parentName:"li"},"If you wish to start or stop any specific service, you can do so with ",(0,a.kt)("inlineCode",{parentName:"p"},"systemctl start")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"systemctl stop")," followed by the service name:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl start openim-api.service\nsystemctl stop openim-api.service\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Uninstalling OpenIM"),":"),(0,a.kt)("p",{parentName:"li"},"In case you wish to remove the OpenIM components from your server, utilize:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/install/install.sh -u\n")),(0,a.kt)("p",{parentName:"li"},"or"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/install/install.sh --uninstall\n")),(0,a.kt)("p",{parentName:"li"},"Ensure you take a backup of any important data before executing the uninstall command.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Logs & Troubleshooting"),":"),(0,a.kt)("p",{parentName:"li"},"Logs play a pivotal role in understanding the system's operation and troubleshooting any issues. OpenIM logs can typically be found in the directory specified during installation, usually ",(0,a.kt)("inlineCode",{parentName:"p"},"${OPENIM_LOG_DIR}"),"."),(0,a.kt)("p",{parentName:"li"},"Always refer to the logs when troubleshooting. Look for any error messages or warnings that might give insights into the issue at hand."))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim-api.service"),": Manages the main API gateways for OpenIM communication."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim-crontask.service"),": Manages scheduled tasks and jobs."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim-msggateway.service"),": Takes care of message gateway operations."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim-msgtransfer.service"),": Handles message transfer functionalities."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim-push.service"),": Responsible for push notification services."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim-rpc-auth.service"),": Manages RPC (Remote Procedure Call) for authentication."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim-rpc-conversation.service"),": Manages RPC for conversations."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim-rpc-friend.service"),": Handles RPC for friend-related operations."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim-rpc-group.service"),": Manages group-related RPC operations."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim-rpc-msg.service"),": Takes care of message RPCs."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim-rpc-third.service"),": Deals with third-party integrations using RPC."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim-rpc-user.service"),": Manages user-related RPC operations."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"openim.target"),": A target that bundles all the above services for collective operations.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Viewing Logs with ",(0,a.kt)("inlineCode",{parentName:"strong"},"journalctl"),":")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"systemctl")," services usually log their output to the systemd journal, which you can access using the ",(0,a.kt)("inlineCode",{parentName:"p"},"journalctl")," command."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"View Logs for a Specific Service"),":"),(0,a.kt)("p",{parentName:"li"},"To view the logs for a particular service, you can use:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"journalctl -u <service-name>\n")),(0,a.kt)("p",{parentName:"li"},"For example, to see the logs for the ",(0,a.kt)("inlineCode",{parentName:"p"},"openim-api.service"),", you would use:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"journalctl -u openim-api.service\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Filtering Logs"),":"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"By Time: If you wish to see logs since a specific time:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'journalctl -u openim-api.service --since "2023-10-28 12:00:00"\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Most Recent Logs: To view the most recent logs, you can combine\n",(0,a.kt)("inlineCode",{parentName:"p"},"tail")," functionality with ",(0,a.kt)("inlineCode",{parentName:"p"},"journalctl"),":"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"}," ```bash\n journalctl -u openim-api.service -n 100\n ```\n"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Continuous Monitoring of Logs"),":"),(0,a.kt)("p",{parentName:"li"},"To see new log messages in real-time, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"-f")," flag, which mimics the behavior of ",(0,a.kt)("inlineCode",{parentName:"p"},"tail -f"),":"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"journalctl -u openim-api.service -f\n")))),(0,a.kt)("h3",{id:"continued-maintenance"},"Continued Maintenance:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Regularly Check Service Status"),":"),(0,a.kt)("p",{parentName:"li"},"It's good practice to routinely verify that all services are active and running. This can be done with:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl status openim-api.service openim-push.service openim-rpc-group.service openim-crontask.service openim-rpc-auth.service openim-rpc-msg.service openim-msggateway.service openim-rpc-conversation.service openim-rpc-third.service openim-msgtransfer.service openim-rpc-friend.service openim-rpc-user.service\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Update Services"),":"),(0,a.kt)("p",{parentName:"li"},"Periodically, there might be updates or patches to the OpenIM system or its components. Make sure you keep the system updated. After updating any service, always reload the daemon and restart the service:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl daemon-reload\nsystemctl restart openim-api.service\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Backup Important Data"),":"),(0,a.kt)("p",{parentName:"li"},"Regularly backup any configuration files, user data, and other essential data. This ensures that you can restore the system to a working state in case of failures."))),(0,a.kt)("h3",{id:"important-systemctl-and-logging-commands-to-learn"},"Important ",(0,a.kt)("inlineCode",{parentName:"h3"},"systemctl")," and Logging Commands to Learn:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Start/Stop/Restart Services"),":"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl start <service-name>\nsystemctl stop <service-name>\nsystemctl restart <service-name>\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Enable/Disable Services"),":"),(0,a.kt)("p",{parentName:"li"},"If you want a service to start automatically at boot:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl enable <service-name>\n")),(0,a.kt)("p",{parentName:"li"},"To prevent it from starting at boot:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl disable <service-name>\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Check Failed Services"),":"),(0,a.kt)("p",{parentName:"li"},"To quickly check if any service has failed:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl --failed\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Log Rotation"),":"),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"journalctl")," logs can grow large. To clear all archived journal entries, use:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"journalctl --vacuum-time=1d\n")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Advanced requirements:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Convenient service runtime log recording for problem analysis"),(0,a.kt)("li",{parentName:"ul"},"Service management logs"),(0,a.kt)("li",{parentName:"ul"},"Option to restart upon abnormal exit")),(0,a.kt)("p",null,"The daemon does not meet these advanced requirements."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"nohup")," only logs the service's runtime outputs and errors."),(0,a.kt)("p",null,"Only systemd can fulfill all of the above requirements."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"The default logs are enhanced with timestamps, usernames, service names, PIDs, etc., making them user-friendly. You can view logs of abnormal service exits. Advanced customization is possible through the configuration files in ",(0,a.kt)("inlineCode",{parentName:"p"},"/lib/systemd/system/"),".")),(0,a.kt)("p",null,"In short, systemd is the current mainstream way to manage backend services on Linux, so I've abandoned ",(0,a.kt)("inlineCode",{parentName:"p"},"nohup")," in my new versions of bash scripts, opting instead for systemd."),(0,a.kt)("h2",{id:"2-prerequisites-requires-root-permissions"},"2. ",(0,a.kt)("a",{name:"PrerequisitesRequiresrootpermissions"}),"Prerequisites (Requires root permissions)"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Configure ",(0,a.kt)("inlineCode",{parentName:"li"},"environment.sh")," based on the comments."),(0,a.kt)("li",{parentName:"ol"},"Create a data directory:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ${OPENIM_DATA_DIR}/{openim-api,openim-crontask}\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Create a bin directory and copy ",(0,a.kt)("inlineCode",{parentName:"li"},"openim-api")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"openim-crontask")," executable files:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"source ./environment.sh\nmkdir -p ${OPENIM_INSTALL_DIR}/bin\ncp openim-api openim-crontask ${OPENIM_INSTALL_DIR}/bin\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Copy the configuration files of ",(0,a.kt)("inlineCode",{parentName:"li"},"openim-api")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"openim-crontask")," to the ",(0,a.kt)("inlineCode",{parentName:"li"},"${OPENIM_CONFIG_DIR}")," directory:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ${OPENIM_CONFIG_DIR}\ncp openim-api.yaml openim-crontask.yaml ${OPENIM_CONFIG_DIR}\n")),(0,a.kt)("h2",{id:"3--create-openim-api-systemd-unit-template-file"},"3. ",(0,a.kt)("a",{name:"Createopenim-apisystemdunittemplatefile"})," Create ",(0,a.kt)("inlineCode",{parentName:"h2"},"openim-api")," systemd unit template file"),(0,a.kt)("p",null,"For each OpenIM service, we will create a systemd unit template. Follow the steps below for each service:"),(0,a.kt)("p",null,"Run the following shell script to generate the ",(0,a.kt)("inlineCode",{parentName:"p"},"openim-api.service.template"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"source ./environment.sh\ncat > openim-api.service.template <<EOF\n[Unit]\nDescription=OpenIM Server API\nDocumentation=https://github.com/oepnimsdk/open-im-server/blob/master/init/README.md\n\n[Service]\nWorkingDirectory=${OPENIM_DATA_DIR}/openim-api\nExecStart=${OPENIM_INSTALL_DIR}/bin/openim-api --config=${OPENIM_CONFIG_DIR}/openim-api.yaml\nRestart=always\nRestartSec=5\nStartLimitInterval=0\n\n[Install]\nWantedBy=multi-user.target\nEOF\n")),(0,a.kt)("p",null,"Following the above style, create the respective template files or generate them in bulk:"),(0,a.kt)("p",null,"First, make sure you've sourced the environment variables:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"source ./environment.sh\n")),(0,a.kt)("p",null,"Use the shell script to generate the systemd unit template for each service:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'declare -a services=(\n"openim-api"\n... [other services]\n)\n\nfor service in "${services[@]}"\ndo\n   cat > $service.service.template <<EOF\n[Unit]\nDescription=OpenIM Server - $service\nDocumentation=https://github.com/oepnimsdk/open-im-server/blob/master/init/README.md\n\n[Service]\nWorkingDirectory=${OPENIM_DATA_DIR}/$service\nExecStart=${OPENIM_INSTALL_DIR}/bin/$service --config=${OPENIM_CONFIG_DIR}/$service.yaml\nRestart=always\nRestartSec=5\nStartLimitInterval=0\n\n[Install]\nWantedBy=multi-user.target\nEOF\ndone\n')),(0,a.kt)("h2",{id:"4-copy-systemd-unit-template-file-to-systemd-config-directory-requires-root-permissions"},"4. ",(0,a.kt)("a",{name:"CopysystemdunittemplatefiletosystemdconfigdirectoryRequiresrootpermissions"}),"Copy systemd unit template file to systemd config directory (Requires root permissions)"),(0,a.kt)("p",null,"Ensure you have root permissions to perform this operation:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'for service in "${services[@]}"\ndo\n   sudo cp $service.service.template /etc/systemd/system/$service.service\ndone\n...\n')),(0,a.kt)("h2",{id:"5-start-systemd-service"},"5. ",(0,a.kt)("a",{name:"Startsystemdservice"}),"Start systemd service"),(0,a.kt)("p",null,"To start the OpenIM services:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'for service in "${services[@]}"\ndo\n   sudo systemctl daemon-reload \n   sudo systemctl enable $service \n   sudo systemctl restart $service\ndone\n')))}k.isMDXComponent=!0}}]);