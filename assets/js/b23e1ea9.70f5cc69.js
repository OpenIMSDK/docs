"use strict";(self.webpackChunkopenim_docs=self.webpackChunkopenim_docs||[]).push([[80082],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),b=a,d=u["".concat(s,".").concat(b)]||u[b]||f[b]||o;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},77130:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>u});r(67294);var n=r(3905);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const l={sidebar_position:1,title:"Callback Explanation",hide_title:!0},s="\ud83d\udcde Callback Explanation",c={unversionedId:"introduction",id:"introduction",title:"Callback Explanation",description:"\ud83d\udce2 OpenIM provides a powerful callback function. When a specific event occurs, before or after, OpenIMServer proactively notifies the APP business server through HTTP/HTTPS requests. Thus, the APP business server can intervene in the subsequent process of the event or perform data synchronization based on these callbacks.",source:"@site/i18n/en/docusaurus-plugin-content-docs-restapi/current/introduction.mdx",sourceDirName:".",slug:"/introduction",permalink:"/restapi/introduction",draft:!1,editUrl:"https://github.com/OpenIMSDK/docs/tree/main/docs/restapi/introduction.mdx",tags:[],version:"current",lastUpdatedAt:1706016941,formattedLastUpdatedAt:"Jan 23, 2024",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Callback Explanation",hide_title:!0},sidebar:"tutorialSidebar",next:{title:"user_register",permalink:"/restapi/apis/userManagement/userRegister"}},p={},u=[{value:"\ud83d\udcd1 Callback Classification",id:"-callback-classification",level:2},{value:"\u2699\ufe0f Configuration Explanation",id:"\ufe0f-configuration-explanation",level:2},{value:"\ud83d\udd04 Callback Protocol",id:"-callback-protocol",level:2}],f={toc:u},b="wrapper";function d(e){var{components:t}=e,r=i(e,["components"]);return(0,n.kt)(b,o(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){a(e,t,r[t])}))}return e}({},f,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-callback-explanation"},"\ud83d\udcde Callback Explanation"),(0,n.kt)("p",null,"\ud83d\udce2 ",(0,n.kt)("strong",{parentName:"p"},"OpenIM")," provides a powerful callback function. When a specific event occurs, before or after, ",(0,n.kt)("strong",{parentName:"p"},"OpenIMServer")," proactively notifies the APP business server through HTTP/HTTPS requests. Thus, the APP business server can intervene in the subsequent process of the event or perform data synchronization based on these callbacks."),(0,n.kt)("h2",{id:"-callback-classification"},"\ud83d\udcd1 Callback Classification"),(0,n.kt)("p",null,"Callbacks are classified into two main categories based on the timing of processing:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\ud83d\udeab ",(0,n.kt)("strong",{parentName:"p"},"Callbacks before an event occurs"),": These callbacks (before type) aim to let the APP business server intervene in event processing, for example, to filter sensitive words in messages. ",(0,n.kt)("strong",{parentName:"p"},"OpenIMServer")," will determine the subsequent process based on the callback return.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\ud83d\udce4 ",(0,n.kt)("strong",{parentName:"p"},"Notifications after an event occurs"),": These callbacks (after type) are mainly used to notify the APP business server to synchronize data, for example, when a user joins a group. At this time, ",(0,n.kt)("strong",{parentName:"p"},"OpenIMServer")," will ignore the callback return and error codes."))),(0,n.kt)("h2",{id:"\ufe0f-configuration-explanation"},"\u2699\ufe0f Configuration Explanation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"callback:\n  url:\n  beforeCreateGroup:\n    enable: true\n    timeout: 5\n    failedContinue: true\n\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"url: The callback address of the APP business server, supporting HTTP/HTTPS."),(0,n.kt)("li",{parentName:"ul"},"enable: Whether to enable this callback, true for enabled."),(0,n.kt)("li",{parentName:"ul"},"timeout: Response timeout time (seconds)."),(0,n.kt)("li",{parentName:"ul"},"failedContinue: Whether to continue the process after timeout or API failure, generally only valid for before type callbacks, true for continuing the process.")),(0,n.kt)("h2",{id:"-callback-protocol"},"\ud83d\udd04 Callback Protocol"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"OpenIMServer")," uses a third-party callback mechanism based on the ",(0,n.kt)("strong",{parentName:"p"},"HTTP/HTTPS")," protocol. When initiating callback requests, ",(0,n.kt)("strong",{parentName:"p"},"OpenIMServer")," uses the ",(0,n.kt)("strong",{parentName:"p"},"POST")," request method to notify the APP business server. The specific content of these requests will be directly included in the request body."))}d.isMDXComponent=!0}}]);